@page
@using Devblog_Library.Interfaces
@using Devblog_Library.Models
@model IndexModel
@{
    ViewData["Title"] = "Devblog";
}

<body>
    <div>
        <h1 class="text-center mb-5" style="color: #620dc5; font-weight: bold;">Developer Blog</h1>

        <div class="row">
            @foreach (var post in Model.Posts)
            {
                <div class="col-lg-12">
                    <div class="post-card" data-post-id="@post.Id">
                        <!-- Common Title and Date for all post types -->
                        <h2 class="post-title">@post.Title</h2>
                        @{
                            var formattedDate = post.Date.ToString("MMMM dd, yyyy");
                            var capitalizedDate = char.ToUpper(formattedDate[0]) + formattedDate.Substring(1);
                        }
                        <p class="post-date">Published On: @capitalizedDate</p>

                        <!-- Post Reference -->
                        <a href="@post.Reference" class="post-reference" target="_blank">Reference: @post.Reference</a>

                        <!-- Display Tags -->
                        <div class="post-tags">
                            <strong>Tags:</strong>
                            @foreach (Tag tag in post.Tags)
                            {
                                <button type="button" class="btn" disabled>@tag.Name</button>
                            }
                        </div>

                        <div class="post-content">
                            @if (post is BlogPost blogPost)
                            {
                                <!-- BlogPost Section -->
                                <div class="weblog">
                                    <p>@blogPost.Weblog</p>
                                </div>
                            }
                            else if (post is Review review)
                            {
                                <!-- Review Section -->
                                <div class="pros">
                                    <strong>Pros:</strong>
                                    <p>@review.Pros</p>
                                </div>
                                <div class="cons">
                                    <strong>Cons:</strong>
                                    <p>@review.Cons</p>
                                </div>

                                <!-- Star rating -->
                                <div class="star-rating">
                                    @for (var i = 0; i < review.Stars; i++)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                    @for (var i = review.Stars; i < 5; i++)
                                    {
                                        <i class="far fa-star"></i>
                                    }
                                </div>
                            }
                        </div>

                        <!-- Comments -->
                        <div class="comment-section">
                            <h3 class="comment-title">Comments</h3>
                            @foreach (Comment comment in post.Comments)
                            {
                                <div class="comment" action="@comment.Id">
                                    <div class="comment-header">
                                        <span class="comment-author">@comment.UserName</span>
                                        @{
                                            var CreationDate = comment.CreationDate.ToString("MMMM dd, yyyy");
                                            var CapitalizedDate = char.ToUpper(formattedDate[0]) + formattedDate.Substring(1);
                                        }
                                        <span class="comment-date">@CapitalizedDate</span>

                                        <!-- Only show the edit button if the user is the author or an admin -->
                                        @if (User.Identity.Name == comment.UserName || User.IsInRole("Admin"))
                                        {
                                            <button class="edit-icon" onclick="CommentClick(this);">✏️</button>

                                            <form method="post" asp-page-handler="DeleteComment" class="delete-comment-form" style="display:inline;">
                                                <input type="hidden" name="commentId" value="@comment.Id" />
                                                <button type="submit" class="delete-icon" onclick="return confirm('Are you sure you want to delete this comment? This action cannot be undone.');">🗑️</button>
                                            </form>
                                        }
                                    </div>
                                    <p class="comment-content">@comment.Message</p>
                                </div>
                            }

                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="add-comment-form mt-4">
                                    <h4>Add a Comment</h4>
                                    <form method="post" asp-page-handler="AddComment" asp-route-postId="@post.Id" asp-route-userName="@User.Identity.Name">
                                        <textarea class="form-control mb-2" name="Message" rows="3" placeholder="Write your comment here..." required></textarea>
                                        <button type="submit" class="btn btn-primary">Submit Comment</button>
                                    </form>
                                </div>
                            }
                            else
                            {
                                <p>Please <a href="/Login">log in</a> to add a comment.</p>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>

    <div class="modal fade" id="CommentModal" tabindex="-1" aria-labelledby="CommentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CommentModalLabel">Edit Comment</h5>
                <button class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="EditComment">
                <div class="modal-body">
                    <input type="hidden" name="postId" />
                    <input type="hidden" name="commentId" />
                    <div class="mb-3">
                        <label>Message: </label>
                        <textarea name="Message" class="form-control" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

</body>

<script>
    var CommentClick = function (editButton) {
        // Navigate up to the parent `.comment` div from the clicked edit button
        var commentElement = $(editButton).closest('.comment');
    
        // Extract relevant data
        var author = commentElement.find('.comment-author').text();
        var date = commentElement.find('.comment-date').text();
        var message = commentElement.find('.comment-content').text();
    
        // Retrieve the commentId and postId
        var commentId = commentElement.attr('action'); // Assuming action attribute has commentId
        var postId = commentElement.closest('.post-card').attr('data-post-id'); // Set data-post-id on your post card div

        // Populate modal fields
        $('#CommentModalLabel').text('Edit Comment by ' + author);
        $('#CommentModal').find('textarea[name="Message"]').val(message);

        // Set hidden input values for postId and commentId
        $('#CommentModal').find('input[name="postId"]').val(postId);
        $('#CommentModal').find('input[name="commentId"]').val(commentId);
    
        // Display a confirmation message
        $('#pMsg').text('You are editing the comment from ' + author + ' dated ' + date);
    
        // Show the modal
        $('#CommentModal').modal('show');
    };


    var DeleteComment = function (deleteButton) {
        if (confirm("Are you sure you want to delete this comment? This action cannot be undone.")) {

            var commentId = $(DeleteButton).data('comment-id');

            var pageUrl = window.location.pathname;
            window.location.href = pageUrl + "?handler=DeleteComment&commentId=" + commentId;
        }
    };
</script>

<style>
    .post-card {
        background-color: var(--bs-body-bg);
        border: 1px solid var(--bs-border-color);
        color: var(--bs-body-color);
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .post-card:hover {
            background-color: var(--bs-body-bg);
            transform: translateY(-5px);
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.2);
        }

    .post-title {
        font-size: 1.8rem;
        font-weight: bold;
        color: var(--bs-primary-text-emphasis);
    }

    [data-bs-theme="light"] .post-date {
        font-size: 0.9rem;
        color: #777;
    }

    [data-bs-theme="dark"] .post-date {
        font-size: 0.9rem;
        color: #aaaaaa;
    }

    [data-bs-theme="light"] .post-tags {
        color: black;
    }

    [data-bs-theme="dark"] .post-tags {
        color: white;
    }

    .post-reference {
        font-size: 1.1rem;
        color: #007bff;
        text-decoration: none;
        margin-bottom: 10px;
    }

        .post-reference:hover {
            text-decoration: underline;
        }

    .post-content {
        margin-top: 10px;
        font-size: 1.1rem;
    }

    [data-bs-theme="light"] .weblog {
        background-color: #e8f0fe;
        border-left: 5px solid #2196f3;
        padding: 15px;
        font-style: italic;
        font-size: 1.1rem;
        /*color: #444;*/
        margin-top: 15px;
        border-radius: 8px;
    }

    [data-bs-theme="dark"] .weblog {
        background-color: #324b71;
        border-left: 5px solid #1c53c9;
        padding: 15px;
        font-style: italic;
        font-size: 1.1rem;
        /*color: #444;*/
        margin-top: 15px;
        border-radius: 8px;
    }

    .pros, .cons {
        padding: 10px;
        border-radius: 5px;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    [data-bs-theme="light"] .pros {
        background-color: #e0f7e0;
        border-left: 5px solid #28a745;
    }

    [data-bs-theme="dark"] .pros {
        background-color: #303f30;
        border-left: 5px solid #28a745;
        color: white;
    }

    [data-bs-theme="light"] .cons {
        background-color: #f8d7da;
        border-left: 5px solid #dc3545;
    }

    [data-bs-theme="dark"] .cons {
        background-color: #483335;
        border-left: 5px solid #dc3545;
        color: white;
    }

    .star-rating i {
        margin-right: 2px;
        color: #ffc107;
    }

    body {
        background-color: var(--bs-body-bg);
    }

    .container {
        padding-top: 20px;
    }

    .post-title, .pros strong, .cons strong {
        color: #ff5722;
    }

    .comment-section {
        margin-top: 30px;
        border-top: 1px solid #ddd;
        padding-top: 20px;
    }

    .comment-title {
        font-size: 1.5rem;
        color: #a08615;
        margin-bottom: 15px;
        font-weight: bold;
    }

    .comment {
        background-color: var(--bs-secondary-bg);
        color: var(--bs-body-color);
        border: 1px solid var(--bs-border-color);
    }

    [data-bs-theme="light"] .comment:hover {
        background-color: lightgray;
    }

    [data-bs-theme="dark"] .comment:hover {
        background-color: #40464C;
    }

    .comment-header {
    display: flex;
    align-items: center;
    gap: 2px;
}

    [data-bs-theme="light"] .comment-author {
        font-weight: bold;
        color: #d8122d;
        margin-right: auto;
    }

    [data-bs-theme="dark"] .comment-author {
        font-weight: bold;
        color: #d8122d;
        margin-right: auto;
    }

    .comment-date {
        font-size: 0.85rem;
        color: #777;
        margin-left: 5px;
    }

    .edit-icon, .delete-icon {
        background: none;
        border: none;
        outline: none;
        margin-left: 2px;
        cursor: pointer;
    }

    [data-bs-theme="light"] .comment-content {
        font-size: 1rem;
        color: #333;
        line-height: 1.5;
    }

    [data-bs-theme="dark"] .comment-content {
        font-size: 1rem;
        color: white;
        line-height: 1.5;
    }

</style>